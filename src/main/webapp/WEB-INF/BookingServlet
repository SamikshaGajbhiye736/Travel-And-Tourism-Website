package com.org;

import java.io.IOException;
import java.sql.Connection;
import java.sql.Date;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;


@WebServlet("/BookingServlet")
public class BookingServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;
       
    
    public BookingServlet() {
        super();
        
    }

		protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	        // Retrieve form data
	        String passengerName = request.getParameter("passengerName");
	        String age = request.getParameter("age");
	        String gender = request.getParameter("gender");
	        String email = request.getParameter("email");
	        String phone = request.getParameter("phone");
	        String seats = request.getParameter("seats");

	        // Search form data
	        String searchDate = request.getParameter("searchDate");
	        String searchClass = request.getParameter("searchClass");
	        String searchFrom = request.getParameter("searchFrom");
	        String searchTo = request.getParameter("searchTo");

	        // Input validation
	        if (passengerName == null || passengerName.isEmpty()) {
	            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
	            response.getWriter().write("Passenger name is required");
	            return;
	        }
	        if (age == null || age.isEmpty() || !age.matches("\\d+")) {  // Ensure age is a number
	            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
	            response.getWriter().write("Valid age is required");
	            return;
	        }
	        if (gender == null || gender.isEmpty()) {
	            response.setStatus(HttpServletResponse.SC_BAD_REQUEST);
	            response.getWriter().write("Gender is required");
	            return;
	        }
	        
	        response.setHeader("Access-Control-Allow-Origin", "*");  // Allow all origins, or specify your frontend URL
	        response.setHeader("Access-Control-Allow-Methods", "POST, GET, OPTIONS");
	        response.setHeader("Access-Control-Allow-Headers", "Content-Type");


	        // Database connection
	        Connection conn = null;
	        PreparedStatement stmt = null;
	        try {
	            // Connect to database
	            conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/trainticket", "root", "rutuja@06");
	            
	            // Prepare SQL query
	            String query = "INSERT INTO bookings (name, age, gender, email, phone, seats, travel_date, travel_class, travel_from, travel_to) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)";
	            stmt = conn.prepareStatement(query);
	            
	            // Set parameters
	            stmt.setString(1, passengerName);
	            stmt.setString(2, age);
	            stmt.setString(3, gender);
	            stmt.setString(4, email);
	            stmt.setString(5, phone);
	            stmt.setString(6, seats);
	            stmt.setString(7, searchDate);
	            stmt.setString(8, searchClass);
	            stmt.setString(9, searchFrom);
	            stmt.setString(10, searchTo);

	            // Execute query
	            int rowsInserted = stmt.executeUpdate();
	            if (rowsInserted > 0) {
	                response.getWriter().write("Booking successful");
	            } else {
	                response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
	                response.getWriter().write("Booking failed");
	            }
	        } catch (SQLException e) {
	            e.printStackTrace();
	            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
	            response.getWriter().write("Database error: " + e.getMessage());
	        } catch (Exception e) {
	            e.printStackTrace();
	            response.setStatus(HttpServletResponse.SC_INTERNAL_SERVER_ERROR);
	            response.getWriter().write("Error occurred: " + e.getMessage());
	        } finally {
	            try {
	                if (stmt != null) stmt.close();
	                if (conn != null) conn.close();
	            } catch (SQLException e) {
	                e.printStackTrace();
	            }
	        }

	}

}
